var a = "global a";
var b = "global b";
var c = "global c";

{
  var a = "outer a";
  var b = "outer b";
  {
   var a = "inner a";
   print a;
   print b;
   print c;
  }

  print a;
  print b;
  print c;
}

print a;
print b;
print c;


// Conditional
var x = 0;
var y = 1;

if (x == y) {
  print "TRUE";
} else {
  print "FALSE";
}

print "Hi" or 3;

// Print three times the same phrase
var i = 0;
while (i != 3) {
  print "Hello from lox";
  i = i + 1;
}

// Fibonacci
var a = 0;
var temp;

for (var b = 1; a < 100; b = temp + b) {
  print a;
  temp = a;
  a = b;
}

fun sayHi(first, last) {
  print "Hi, " + first + " " + last + "!";
}

sayHi("Gabriel", "Malaquias");

// recursive fib
fun fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}

for (var i = 0; i < 20; i = i + 1) {
  print fib(i);
}

fun makeCounter() {
  var i = 0;
  fun count() {
    i = i + 1;
    print i;
  }

  return count;
}

print "-------- Counter ------";
var counter = makeCounter();
counter();
counter();
counter();


var a = "global";

{
  fun showA() {
    print a;
  }

  showA();
  var a = "block";
  showA();
}

print "------- Class --------";

class Greetings {
  execute() {
    return "Hello World!";
  }
}

print Greetings;

class Bagel {}
var bagel = Bagel();
print bagel;

class Bacon {
  eat() {
    print "Crunch crunch crunch";
  }
}

Bacon().eat();

class Thing {
  getCallback() {
    fun localFunction() {
      print this;
    }

    return localFunction;
  }
}

var callback = Thing().getCallback();
callback();